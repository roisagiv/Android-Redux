apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.3"

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 23
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

ext {
  androidTestVersion = "0.5"
}

dependencies {
  compile 'com.android.support:appcompat-v7:23.4.0'

  androidTestCompile("com.android.support.test:runner:${androidTestVersion}") {
    exclude group: "com.android.support"
  }

  androidTestCompile 'org.assertj:assertj-core:1.7.1'
}


group = 'io.github.roisagiv.android.redux'

// build a jar with source files
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  failOnError false
  source = android.sourceSets.main.java.sourceFiles
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

android.libraryVariants.all { variant ->
  def name = variant.buildType.name
  def task = project.tasks.create "jar${name.capitalize()}", Jar
  task.dependsOn variant.javaCompile
  task.from variant.javaCompile.destinationDir
  artifacts.add('archives', task);
}
